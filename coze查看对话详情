查看对话详情
查看对话的详细信息。​
在非流式会话场景中，调用​发起对话接口后，可以先轮询此 API 确认本轮对话已结束（status=completed），再调用接口​查看对话消息详情查看本轮对话的模型回复。​
仅在对话开启了保存历史记录（auto_save_history=true）后，可通过此接口查看对话的详细信息。​
建议每秒最多调用 1 次此接口，否则可能触发接口限流。​
​
基础信息​
​
请求方式​
GET​
请求地址​
​
https://api.coze.cn/v3/chat/retrieve​
​
权限​
getChat​
确保调用该接口使用的个人令牌开通了 getChat 权限，详细信息参考​鉴权方式。​
接口说明​
查看对话的详细信息。​
​
Header​
​
参数​
取值​
说明​
Authorization​
Bearer $Access_Token​
用于验证客户端身份的访问令牌。你可以在扣子平台中生成访问令牌，详细信息，参考​准备工作。​
Content-Type​
application/json​
解释请求正文的方式。​
​
​
​
Query​
​
参数​
类型​
是否必选​
说明​
conversation_id​
String​
必选​
Conversation ID，即会话的唯一标识。​
chat_id​
String​
必选​
Chat ID，即对话的唯一标识。​
​
返回结果​
​
参数​
类型​
说明​
data​
Object​
本次对话的基本信息。详细说明可参考 ​Chat Object。​
code​
Integer​
状态码。​
0 代表调用成功。​
msg​
String​
状态信息。API 调用失败时可通过此字段查看详细错误信息。​
​
Chat Object​
​
参数​
类型​
是否可选​
说明​
id​
String​
必填​
对话 ID，即对话的唯一标识。​
conversation_id​
String​
必填​
会话 ID，即会话的唯一标识。​
bot_id​
String​
必填​
要进行会话聊天的智能体 ID。​
created_at​
Integer​
选填​
对话创建的时间。格式为 10 位的 Unixtime 时间戳，单位为秒。​
completed_at​
Integer​
选填​
对话结束的时间。格式为 10 位的 Unixtime 时间戳，单位为秒。​
failed_at​
Integer​
选填​
对话失败的时间。格式为 10 位的 Unixtime 时间戳，单位为秒。​
meta_data​
Map<String,String>​
选填​
创建消息时的附加消息，用于传入使用方的自定义数据，获取消息时也会返回此附加消息。​
自定义键值对，应指定为 Map 对象格式。长度为 16 对键值对，其中键（key）的长度范围为 1～64 个字符，值（value）的长度范围为 1～512 个字符。​
last_error​
​
Object​
选填​
对话运行异常时，此字段中返回详细的错误信息，包括：​
Code：错误码。Integer 类型。0 表示成功，其他值表示失败。​
Msg：错误信息。String 类型。​
对话正常运行时，此字段返回 null。​
suggestion 失败不会被标记为运行异常，不计入 last_error。​
​
status​
​
String​
必填​
对话的运行状态。取值为：​
created：对话已创建。​
in_progress：智能体正在处理中。​
completed：智能体已完成处理，本次对话结束。​
failed：对话失败。​
requires_action：对话中断，需要进一步处理。​
canceled：对话已取消。​
required_action​
Object​
选填​
需要运行的信息详情。​
» type​
String​
选填​
额外操作的类型，枚举值为 submit_tool_outputs。​
»submit_tool_outputs​
Object​
选填​
需要提交的结果详情，通过提交接口上传，并可以继续聊天​
»» tool_calls​
Array of Object​
选填​
具体上报信息详情。​
»»» id​
String​
选填​
上报运行结果的 ID。​
»»» type​
String​
选填​
工具类型，枚举值为 function。​
»»» function​
Object​
选填​
执行方法 function 的定义。​
»»»» name​
String​
选填​
方法名。​
»»»» arguments​
String​
选填​
方法参数。​
usage​
Object​
选填​
Token 消耗的详细信息。实际的 Token 消耗以对话结束后返回的值为准。​
»token_count​
Integer​
选填​
本次对话消耗的 Token 总数，包括 input 和 output 部分的消耗。​
»output_count​
Integer​
选填​
output 部分消耗的 Token 总数。​
»input_count​
Integer​
选填​
input 部分消耗的 Token 总数。​
​
Chat Object 的示例如下：​
​
{​
// 在 chat 事件里，data 字段中的 id 为 Chat ID，即会话 ID。​
    "id": "737662389258662****",​
    "conversation_id": "737554565555041****",​
    "bot_id": "736661612448078****",​
    "completed_at": 1717508113,​
    "last_error": {​
        "code": 0,​
        "msg": ""​
    },​
    "status": "completed",​
    "usage": {​
        "token_count": 6644,​
        "output_count": 766,​
        "input_count": 5878​
    }​
}​
​
​
​
​
示例​
请求示例​
​
curl --location --request GET 'https://api.coze.cn/v3/chat/retrieve?chat_id=738137187639794****&conversation_id=738136585609548****' \​
--header 'Authorization: Bearer pat_OYDacMzM3WyOWV3Dtj2bHRMymzxP****' \​
--header 'Content-Type: application/json' \​
​
返回示例​
​
{​
    "code": 0,​
    "data": {​
        "bot_id": "737946218936519****",​
        "completed_at": 1718609575,​
        "conversation_id": "738136585609548****",​
        "created_at": 1718609571,​
        "id": "738137187639794****",​
        "status": "completed",​
        "usage": {​
            "input_count": 242,​
            "output_count": 56,​
            "token_count": 298​
        }​
    },​
    "msg": ""​
}